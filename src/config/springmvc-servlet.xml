<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	default-lazy-init="true" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:redis="http://www.springframework.org/schema/redis"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis-1.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


<<<<<<< HEAD
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.shop.demo" >
	</context:component-scan>
=======
>>>>>>> d67b7aec6f965887328cbec908b67c485dc5e0d5

	<!-- 使用Annotation自动注册Bean -->
	<context:component-scan base-package="com.shop.demo" >
	</context:component-scan>
	<!-- 用于激活那些已经在spring容器里注册过的bean ,配合上面自动注册使用 -->
	
	<context:annotation-config />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"> <!-- 制定页面存放的路径 -->
		<property name="prefix" value="/WEB-INF/pages"></property> <!-- 文件的后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!--<context:component-scan base-package="com.shop.demo"></context:component-scan>  静态资源过滤 -->
	<mvc:resources location="/resources/" mapping="/resources/**" />
	
<<<<<<< HEAD
	
     <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
         <!-- JSON转换器 -->
         <property name="messageConverters">
             <list>
                 <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                     <property name="supportedMediaTypes">
                         <list>
                            <value>application/json;charset=utf-8</value>
                            <value>text/json;charset=utf-8</value>
                         </list>
                     </property>
                 </bean>
             </list>
         </property>
     </bean>
	
=======

	<!-- 定义事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 缓存配置 
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:/cache/ehcache-local.xml" />
	</bean>
	-->
	<bean id="commonDataSourceConfig" class="com.jolbox.bonecp.BoneCPDataSource">
	<!-- 每个分区最大的连接数 -->
	<property name="maxConnectionsPerPartition" value="100"></property>
	<!-- 每个分区的最小连接数 -->
	<property name="minConnectionsPerPartition" value="10"></property>
	<!-- 分区数，默认2，最小1，推荐3-4，视情况而定 -->
	<property name="partitionCount" value="3"></property>
	<!-- 每次去拿数据库连接的时候一次性要拿几个，默认值：2 -->
	<property name="acquireIncrement" value="2"></property>
	<!-- 测试链接有效性的间隔时间，单位：分钟 -->
	<property name="idleConnectionTestPeriod" value="30"></property>
	<!-- 空闲存活时间 -->
	<property name="idleMaxAge" value="10"></property>
	<!-- 链接超时时间 毫秒-->
	<property name="connectionTimeout" value="10000"></property>
	</bean>
	
	<bean id="dataSource" parent="commonDataSourceConfig">
	<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
	<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/test"></property>
	<property name="username" value="root"></property>
	<property name="password" value=""></property>
	</bean>
	
	
	<bean id="mySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"></property>
	<property name="configLocation" value="classpath:/cfg.xml"></property>
	</bean>
	
	
	
	<!--下面两种方法，一种是自动是扫描对应的service类，一种是通过注入sqlsessionFactory的方式来获取一个SqlsessionTemplate--> 
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
	<bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	       <property name="basePackage" value="com.shop.demo.dao"></property>
	       <property name="sqlSessionFactoryBeanName" value="mySqlSessionFactory"></property>
	</bean>
	
	
	<!-- 配置多文件上传 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<property name="defaultEncoding"> <value>UTF-8</value> </property> <property 
		name="maxUploadSize"> <value>32505856</value> </property> <property name="maxInMemorySize">
		<value>4096</value> </property> </bean> -->

		<!-- JSON转换器 
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=utf-8</value>
							<value>text/json;charset=utf-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>-->
>>>>>>> d67b7aec6f965887328cbec908b67c485dc5e0d5
</beans>
